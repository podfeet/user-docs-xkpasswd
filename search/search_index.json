{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"XKPASSWD User Documentation What is XKPASSWD? XKPASSWD is a web app designed to help you create long, strong, and yet memorable and typable psswords. What's the Problem to be Solved? We all know we should be using long, strong passwords, but we tend to fall back on bad habits because they're hard to remember and hard to type, especially on mobile devices, or even worse \u2013 on a printer. XKPASSWD can help you create passwords for very specific situations, such as creating an Apple ID password that you can type on an iPhone without constant switching back and forth with different keyboard layouts. Is XKPASSWD a Password Manager? NO, XKPASSWD is not a password manager. It doesn't store any passwords you create but rather allows you to copy them and add them to your dedicated password manager. You are using a password manager, right? User Guide to XKPASSWD What does XKPASSWD have to do with the XKCD comic? How can I help with XKPASSWD?","title":"Home"},{"location":"#xkpasswd-user-documentation","text":"","title":"XKPASSWD User Documentation"},{"location":"#what-is-xkpasswd","text":"XKPASSWD is a web app designed to help you create long, strong, and yet memorable and typable psswords.","title":"What is XKPASSWD?"},{"location":"#whats-the-problem-to-be-solved","text":"We all know we should be using long, strong passwords, but we tend to fall back on bad habits because they're hard to remember and hard to type, especially on mobile devices, or even worse \u2013 on a printer. XKPASSWD can help you create passwords for very specific situations, such as creating an Apple ID password that you can type on an iPhone without constant switching back and forth with different keyboard layouts.","title":"What's the Problem to be Solved?"},{"location":"#is-xkpasswd-a-password-manager","text":"NO, XKPASSWD is not a password manager. It doesn't store any passwords you create but rather allows you to copy them and add them to your dedicated password manager. You are using a password manager, right? User Guide to XKPASSWD What does XKPASSWD have to do with the XKCD comic? How can I help with XKPASSWD?","title":"Is XKPASSWD a Password Manager?"},{"location":"about/","text":"About xkpasswd-js is an open source project that is the brainchild of developer and Security Specialist Bart Busschots . This JavaScript version of XKPASSWD is a port of Bart's original perl code. This new version is being developed by primarily by Helma van der Linden along with other open source contributors. If you'd like to get involved in the development, including adding to the wishlist for features, read more here .","title":"About"},{"location":"about/#about","text":"xkpasswd-js is an open source project that is the brainchild of developer and Security Specialist Bart Busschots . This JavaScript version of XKPASSWD is a port of Bart's original perl code. This new version is being developed by primarily by Helma van der Linden along with other open source contributors. If you'd like to get involved in the development, including adding to the wishlist for features, read more here .","title":"About"},{"location":"help-xkpasswd/","text":"How to Help With XKPASSWD Yes, and we welcome help. xkpasswd-js is an open source project being managed through GitHub. You can find the repository at xkpasswd-js . Start by reading the README.md where you'll learn about the repository structure and prerequisites . We also have a versioning policy, a source control policy, and a style guide. If all of this sounds intimidating and you just want to document something that doesn't work properly, or maybe tell us about a feature you'd like, you can go directly to the Issues tab and submit a new issue. We also have a discussion area in GitHub where you can chat with contributors about the project, maybe ask questions and share user stories about how awesome XKPASSWD is \ud83d\ude01.","title":"Help the Project"},{"location":"help-xkpasswd/#how-to-help-with-xkpasswd","text":"Yes, and we welcome help. xkpasswd-js is an open source project being managed through GitHub. You can find the repository at xkpasswd-js . Start by reading the README.md where you'll learn about the repository structure and prerequisites . We also have a versioning policy, a source control policy, and a style guide. If all of this sounds intimidating and you just want to document something that doesn't work properly, or maybe tell us about a feature you'd like, you can go directly to the Issues tab and submit a new issue. We also have a discussion area in GitHub where you can chat with contributors about the project, maybe ask questions and share user stories about how awesome XKPASSWD is \ud83d\ude01.","title":"How to Help With XKPASSWD"},{"location":"mkdocs-resources/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"mkdocs-resources/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"mkdocs-resources/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"mkdocs-resources/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"user-guide/","text":"User Guide When you first go to xkpasswd.net while the project is in beta, you'll see an explanation of how this tool is being ported from old and busted Perl code to modern web development languages including JavaScript. You'll be invited to push the \"Use the Beta\" button to get started. If you want to skip this step, go directly to the beta version at beta.xkpasswd.net . The tool is not yet feature-complete, but what you can use is functioning properly. If any feature is not functioning properly when you visit the tool, you'll see it labeled as such. Generate Password(s) with Default Configuration If you don't want to fuss around with any kind of settings to generate some passwords, you can simply enter the desired number of passwords and hit the Generate button. By default, this will create 3 highly-complex passwords of the following configuration: 3 English words of 4-8 characters in length where each word has a leading capital letter Each word is separated by a randomly chosen character but is consistent within each password generated 2 digits of padding are on each end of the character-separated words 2 random character symbols are added as final padding on either end For example: %%85?Fell?Tokyo?Building?74%% Copying passwords You have two options to copy the passwords. By default, the passwords are shown in a list format with their own individual copy buttons which will copy directly to your clipboard. The second radio button lets you view the same password list as a block of text that is pre-selected. This view lets you simply use Command/Control-C to copy all of the offered passwords and paste them elsewhere for modification or to let you have a big list of passwords when you're changing several of them at the same time. Presets For ease of use, XKPASSWD comes with a set of predefined presets. Presets can be used as-is, or, they can be used as a starting point for creating your own configuration. Note that one of the presets is for security questions. You should never give a real answer to a security question because this is the kind of information that's easy to get in a phishing attack. Think about how easy it would be to find out the city in which you went to high school for example. Instead of answering truthfully, use the SECURITYQ preset and store the question and answer in your password manager. The following presets are defined: APPLEID - a preset respecting the many prerequisites Apple places on Apple ID passwords. Apple's official password policy is located here: http://support.apple.com/kb/ht4232 . Note that Apple's knowledgebase article neglects to mention that passwords can't be longer than 32 characters. This preset is also configured to use only characters that are easy to type on the standard iOS keyboard, i.e. those appearing on the letters keyboard ( ABC ) or the numbers keyboard .?123 , and not those on the harder-to-reach symbols keyboard #+= . Below is a sample password generated with this preset: @60:london:TAUGHT:forget:70@ DEFAULT - the default configuration. Below is a sample password generated with this preset: 12:settle:SUCCEED:summer:48 NTLM - a preset for 14-character NTMLv1 (NTLM Version 1) passwords. ONLY USE THIS PRESET IF YOU MUST! The 14-character limit does not allow for sufficient entropy in the case where the attacker knows the dictionary and config used to generate the password, hence this preset will generate low entropy warnings. Below is a sample password generated with this preset: 0=mAYAN=sCART@ SECURITYQ - a preset for creating fake answers to security questions. It generates long nonsense sentences ending in . , ! or ? , for example: Wales outside full month minutes gentle? WEB16 - a preset for websites that don't allow more than 16-character long passwords. Because 16 characters is not very long, a large set of symbols are chosen from for the padding and separator. Below is a sample password generated with this preset: :baby.ohio.DEAR: WEB32 - a preset for websites that don't allow more than 32 character long passwords. Below is a sample password generated with this preset: +93-took-CASE-money-AHEAD-31+ WIFI - a preset for generating 63 character long WPA2 keys (most routers allow 64 characters, but some only 63, hence the odd length). Below is a sample password generated with this preset: 2736_ITSELF_PARTIAL_QUICKLY_SCOTLAND_wild_people_7441!!!!!!!!!! XKCD - a preset inspired by the original XKCD comic , but with some alterations to provide sufficient entropy to avoid low entropy warnings. Below is a sample password generated with this preset: KING-madrid-exercise-BELGIUM","title":"User Guide"},{"location":"user-guide/#user-guide","text":"When you first go to xkpasswd.net while the project is in beta, you'll see an explanation of how this tool is being ported from old and busted Perl code to modern web development languages including JavaScript. You'll be invited to push the \"Use the Beta\" button to get started. If you want to skip this step, go directly to the beta version at beta.xkpasswd.net . The tool is not yet feature-complete, but what you can use is functioning properly. If any feature is not functioning properly when you visit the tool, you'll see it labeled as such.","title":"User Guide"},{"location":"user-guide/#generate-passwords-with-default-configuration","text":"If you don't want to fuss around with any kind of settings to generate some passwords, you can simply enter the desired number of passwords and hit the Generate button. By default, this will create 3 highly-complex passwords of the following configuration: 3 English words of 4-8 characters in length where each word has a leading capital letter Each word is separated by a randomly chosen character but is consistent within each password generated 2 digits of padding are on each end of the character-separated words 2 random character symbols are added as final padding on either end For example: %%85?Fell?Tokyo?Building?74%%","title":"Generate Password(s) with Default Configuration"},{"location":"user-guide/#copying-passwords","text":"You have two options to copy the passwords. By default, the passwords are shown in a list format with their own individual copy buttons which will copy directly to your clipboard. The second radio button lets you view the same password list as a block of text that is pre-selected. This view lets you simply use Command/Control-C to copy all of the offered passwords and paste them elsewhere for modification or to let you have a big list of passwords when you're changing several of them at the same time.","title":"Copying passwords"},{"location":"user-guide/#presets","text":"For ease of use, XKPASSWD comes with a set of predefined presets. Presets can be used as-is, or, they can be used as a starting point for creating your own configuration. Note that one of the presets is for security questions. You should never give a real answer to a security question because this is the kind of information that's easy to get in a phishing attack. Think about how easy it would be to find out the city in which you went to high school for example. Instead of answering truthfully, use the SECURITYQ preset and store the question and answer in your password manager. The following presets are defined: APPLEID - a preset respecting the many prerequisites Apple places on Apple ID passwords. Apple's official password policy is located here: http://support.apple.com/kb/ht4232 . Note that Apple's knowledgebase article neglects to mention that passwords can't be longer than 32 characters. This preset is also configured to use only characters that are easy to type on the standard iOS keyboard, i.e. those appearing on the letters keyboard ( ABC ) or the numbers keyboard .?123 , and not those on the harder-to-reach symbols keyboard #+= . Below is a sample password generated with this preset: @60:london:TAUGHT:forget:70@ DEFAULT - the default configuration. Below is a sample password generated with this preset: 12:settle:SUCCEED:summer:48 NTLM - a preset for 14-character NTMLv1 (NTLM Version 1) passwords. ONLY USE THIS PRESET IF YOU MUST! The 14-character limit does not allow for sufficient entropy in the case where the attacker knows the dictionary and config used to generate the password, hence this preset will generate low entropy warnings. Below is a sample password generated with this preset: 0=mAYAN=sCART@ SECURITYQ - a preset for creating fake answers to security questions. It generates long nonsense sentences ending in . , ! or ? , for example: Wales outside full month minutes gentle? WEB16 - a preset for websites that don't allow more than 16-character long passwords. Because 16 characters is not very long, a large set of symbols are chosen from for the padding and separator. Below is a sample password generated with this preset: :baby.ohio.DEAR: WEB32 - a preset for websites that don't allow more than 32 character long passwords. Below is a sample password generated with this preset: +93-took-CASE-money-AHEAD-31+ WIFI - a preset for generating 63 character long WPA2 keys (most routers allow 64 characters, but some only 63, hence the odd length). Below is a sample password generated with this preset: 2736_ITSELF_PARTIAL_QUICKLY_SCOTLAND_wild_people_7441!!!!!!!!!! XKCD - a preset inspired by the original XKCD comic , but with some alterations to provide sufficient entropy to avoid low entropy warnings. Below is a sample password generated with this preset: KING-madrid-exercise-BELGIUM","title":"Presets"},{"location":"xkcd-comic/","text":"What does XKPASSWD have to do with XKCD? One of Randall Munroe's fabulous XKCD comics was part of the inspiration for XKPASSWD. In the comic entitled \"Password Strength\", he illustrates how creating a super long gibberish passsword with upper and lower case letters, numbers, and symbols is nearly uncrackable and proves it by showing how many bits of entropy are in the password example. But it also explains how that same password is nearly impossible to remember. But then he shows how a long enough password that's actually human-readable, memorable, and easy to type can have even more entropy, as long as the words in the password are randomly chosen. Steve Gibson also influenced the project with his Password Haystacks page at https://www.grc.com/haystack.htm where you can experiment with password length and adding digits and special characters to make passwords harder to crack. This concept is the basis for the math behind creating long, strong, memorable, and typable passwords using XKPASSWD.","title":"XKCD and XKPASSWD"},{"location":"xkcd-comic/#what-does-xkpasswd-have-to-do-with-xkcd","text":"One of Randall Munroe's fabulous XKCD comics was part of the inspiration for XKPASSWD. In the comic entitled \"Password Strength\", he illustrates how creating a super long gibberish passsword with upper and lower case letters, numbers, and symbols is nearly uncrackable and proves it by showing how many bits of entropy are in the password example. But it also explains how that same password is nearly impossible to remember. But then he shows how a long enough password that's actually human-readable, memorable, and easy to type can have even more entropy, as long as the words in the password are randomly chosen. Steve Gibson also influenced the project with his Password Haystacks page at https://www.grc.com/haystack.htm where you can experiment with password length and adding digits and special characters to make passwords harder to crack. This concept is the basis for the math behind creating long, strong, memorable, and typable passwords using XKPASSWD.","title":"What does XKPASSWD have to do with XKCD?"}]}